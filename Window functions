-- This exercise jumps into windows functions without any introduction
-- This site helped learn more about windows functions: https://www.geeksforgeeks.org/window-functions-in-sql/
-- Aggregate functions like avg(), sum(), rank(), dense_rank(), row_number(), etc, followed by over() and name of the column within brackets.
-- Window functions apply to aggregate and ranking functions over a particular window (set of rows) -- a "partition" so to speak!
-- so after the clauses windows_function () over (partition by )
-- For ranking functions add order by within the partition by clause but for aggregate functions beware of adding order by within partition by!

-- Warming up
-- 1.Show the lastName, party and votes for the constituency 'S14000024' in 2017.

SELECT lastName, party, votes
  FROM ge
 WHERE constituency = 'S14000024' AND yr = 2017
ORDER BY votes DESC

-- Who won?
-- 2.You can use the RANK function to see the order of the candidates. If you RANK using (ORDER BY votes DESC) then the candidate with the most votes has rank 1.
-- Show the party and RANK for constituency S14000024 in 2017. List the output by party

-- sol1: using the default code which auto sums votes for each party without the use of sum function
SELECT party, votes,
       RANK() OVER (ORDER BY votes DESC) as posn
  FROM ge
 WHERE constituency='S14000024' AND yr='2017'
Order by party

-- sol2: self written is summing the votes because in every constituency there are several contenders who get votes for a certain party.
select party, sum(votes), rank() over(partition by constituency order by sum(votes) Desc) RANK
from ge
where constituency='S14000024' and yr=2017
group by party

-- PARTITION BY
-- 3.The 2015 election is a different PARTITION to the 2017 election. We only care about the order of votes for each year.
-- Use PARTITION to show the ranking of each party in S14000021 in each year. Include yr, party, votes and ranking (the party with the most votes is 1).

select yr,party, sum(votes), rank() over(partition by yr order by sum(votes) Desc)Rank
from ge
where constituency='S14000021'
group by yr, party
order by party, yr

-- Edinburgh Constituency
-- 4. Edinburgh constituencies are numbered S14000021 to S14000026.
-- Use PARTITION BY constituency to show the ranking of each party in Edinburgh in 2017. Order your results so the winners are shown first, then ordered by constituency.

select constituency, party, sum(votes), rank() over(partition by constituency  order by sum(votes) Desc) Rank
from ge
where yr=2017 and constituency between 'S14000021' and 'S14000026'
group by party, constituency
order by Rank, constituency, party

-- Winners Only
-- 5.You can use SELECT within SELECT to pick out only the winners in Edinburgh.
-- Show the parties that won for each Edinburgh constituency in 2017.

select constituency, party 
from (select constituency, party, rank() over(partition by constituency  order by sum(votes) Desc) Rank from ge where yr=2017 and constituency between 'S14000021' and 'S14000026' group by party, constituency) New
where Rank=1 
order by constituency, party

-- Scottish seats
-- 6.You can use COUNT and GROUP BY to see how each party did in Scotland. Scottish constituencies start with 'S'
-- Show how many seats for each party in Scotland in 2017.

select party,count(constituency)
from (select constituency, party, rank() over(partition by constituency  order by sum(votes) Desc) Rank from ge where yr=2017 and constituency LIKE 'S%' group by party, constituency) New
where Rank=1
group by party


