-- Southwind

-- Southwind database

-- 1.The table tpurcd gives details of all products ordered. This table gives details of all purchase orders.

SELECT *
  FROM tcust
  JOIN tpurcd ON (tcust.code=tpurcd.cust)
  JOIN tprod  ON (tpurcd.prod=tprod.code)

-- 2.Some of the tables are joined by a composite foreign key. For example to link shipment details to a shipment record we must join on (cust,shpd).

SELECT addr, tship.shpd, prod
   FROM tship JOIN tshipd
     ON(tshipd.cust=tship.cust AND
        tshipd.shpd=tship.shpd)
 WHERE tship.addr IS NOT NULL

-- Southwind easy

-- Southwind database: easy questions

-- 1.List all the products ordered by customer c006. Include the description of the product, the date that the order was received and the number ordered.

select tprod.code, dscr,recv, qnty
from tprod
join tpurcd on tpurcd.prod=tprod.code
join tcust on tcust.code=tpurcd.cust
where tcust.code='c006'
order by tprod.code, recv Asc

-- Result:
code	dscr	recv	qnty
p003	Bennington	Fri, 08 Feb 2002 00:00:00 GMT	5
p004	Lexington	Sat, 16 Feb 2002 00:00:00 GMT	1
p004	Lexington	Wed, 20 Feb 2002 00:00:00 GMT	4
p005	Wilmington	Sat, 26 Jan 2002 00:00:00 GMT	1
p005	Wilmington	Fri, 08 Feb 2002 00:00:00 GMT	2
p005	Wilmington	Wed, 20 Feb 2002 00:00:00 GMT	4
p006	Farmington	Sat, 16 Feb 2002 00:00:00 GMT	2
p007	Arlington	Wed, 20 Feb 2002 00:00:00 GMT	5
p008	Huntington	Sat, 26 Jan 2002 00:00:00 GMT	2
p008	Huntington	Wed, 20 Feb 2002 00:00:00 GMT	4
p010	Coddington	Sat, 26 Jan 2002 00:00:00 GMT	15

-- 2.For each product show the total number ordered. Include just the product code and the number ordered

select tprod.code, coalesce(sum(qnty),0)
from tprod
left join tpurcd on tpurcd.prod=tprod.code
group by tprod.code
order by tprod.code

-- Result:
code	coalesce(sum(..
p001	21
p002	0
p003	16
p004	20
p005	25
p006	19
p007	14
p008	37
p009	0
p010	27

-- 3.Give the firm and the address of each company that placed an order on 12th February 2007.

select distinct(firm), addr
from tpurcd
join tcust on tcust.code=tpurcd.cust
where date_format(recv, '%Y-%m-%d') = '2002-02-12'

-- Result:
firm	addr
Inconspicuous Inc.	Interception Rd.
Contiguous Corp.	Circumscription Close
Assiduous Assoc.	Attribution Alley

-- 4.Give all details of the order made by customer 'Assiduous Assoc.' on 12th February 2007. Include the product code, the description the price and the number ordered.

select prod, dscr, pric, qnty
from tpurcd
join tcust on tcust.code=tpurcd.cust
join tprod on tprod.code=tpurcd.prod
where date_format(recv, '%Y-%m-%d') = '2002-02-12' and firm = 'Assiduous Assoc.' 

-- Result:
prod	dscr	pric	qnty
p001	Kensington	20.00	1
p008	Huntington	30.00	5

-- 5.Find the total number of 'Wilmington' ordered by 'Contiguous Corp.'.

select sum(qnty)
from tpurcd
join tcust on tcust.code=tpurcd.cust
join tprod on tprod.code=tpurcd.prod
where dscr='Wilmington' and firm = 'Contiguous Corp.' 

-- Result:
sum(qnty)
10

-- Southwind medium

-- Southwind database: medium questions

-- 1.Give the name of the firm or firms who have placed no orders.

select firm
from tcust
left join tpurcd on tpurcd.cust=tcust.code
where cust is NULL

-- Result:
firm
Strenuous Systems

-- 2.Create a list of products. For each product show the description and the total number ordered and the date of the most recent order.

select dscr, coalesce(sum(qnty),0) TNO, coalesce(max(recv), 'No orders') RecentOrdrDate
from tprod
left join tpurcd on tpurcd.prod=tprod.code
group by dscr

-- Result:
dscr	TNO	RecentOrdrDate
Arlington	14	2002-02-20
Barrington	0	No orders
Bennington	16	2002-02-17
Coddington	27	2002-02-17
Farmington	19	2002-02-17
Huntington	37	2002-02-20
Kensington	21	2002-02-17
Lexington	20	2002-02-20
Wilmington	25	2002-02-20
Worthington	0	No orders

-- 3.Show the customer code, the received date and the total value of all purchase orders with a total value of at least Â£475.

select tcust.code, recv, sum(qnty*pric) TV
from tcust
join tpurcd on tpurcd.cust=tcust.code
join tprod on tpurcd.prod=tprod.code
group by tcust.code, recv
having TV>=475

-- Result:
code	recv	TV
c002	Tue, 12 Feb 2002 00:00:00 GMT	475.00
c003	Sun, 17 Feb 2002 00:00:00 GMT	565.00

-- 4.List all shipments for the first week of February (2007-02-01 to 2007-02-07 inclusive). For each shipment show: the customer, the date of the shipment and the address. The address is the customer address as in tcust unless specified in tship

select firm Customer, date_format(shpd,'%Y-%m-%d') Shpmnt_Date, if(s.addr is not NULL, s.addr, c.addr) Address
from tship s
join tcust c on c.code=s.cust
where date_format(shpd,'%Y-%m-%d') between '2002-02-01' and '2002-02-07'

-- Result:
Customer	Shpmnt_Date	Address
Contiguous Corp.	2002-02-03	Circumscription Close
Contiguous Corp.	2002-02-05	Circumscription Close
Assiduous Assoc.	2002-02-07	Diminution Drive

-- 5.Show the total sales by month.

select date_format(recv,'%M-%Y') Month, sum(pric*qnty) TotalSales
from tprod
join tpurcd on tprod.code=tpurcd.prod
group by Month Desc

-- Result:
Month	TotalSales
January-2002	585.00
February-2002	3515.00

-- Southwind hard

-- Southwind database: hard questions

-- 1.Produce an exceptions list. There are three kinds of exception:

RETURN - a customer returns a product
INCOMPLETE - a customer is sent an incomplete shipment
OUTSTANDING - an order has not been shipped
The exceptions list should show the customer/supplier id and name, the date, the exception code, the product involved and any other details that are available - such as the explanation

-- query attempt 1:

select count(*)
from tpurcd

-- Result:
count(*)
49

-- query attempt 2:

select count(*)
from tshipd

-- Result:
count(*)
43

-- query attempt 3: Get RETURN

Select Cust_ID, Cust_Name, Retn_Dt, "RETURN" as Excptn_Code, Product, Explanation
from
(
select tcust.code Cust_ID, firm Cust_Name, date_format(recv,'%Y-%m-%d') Retn_Dt, "RETURN", dscr Product, expl Explanation
from tretn
join tcust on tretn.cust=tcust.code
join tprod on tretn.prod=tprod.code
order by Retn_Dt
) N

-- Result:
Cust_ID	Cust_Name	Retn_Dt	Excptn_Code	Product	Explanation
c002	Inconspicuous Inc.	2002-02-01	RETURN	Huntington	Badly contaminated.
c002	Inconspicuous Inc.	2002-02-01	RETURN	Worthington	The wrong shade of magnolia.
c005	Assiduous Assoc.	2002-02-15	RETURN	Kensington	Reminiscent of spouse.
c006	Incongruous Int.	2002-01-28	RETURN	Huntington	Took off all the handles and the things that held the candles.
c006	Incongruous Int.	2002-02-10	RETURN	Worthington	Sub-space phase adjustment coil burnt out.

-- query attempt 4: Get OUTSTANDING

select N.code Cust_ID, firm Cust_Name, date_format(N.recv,'%Y-%m-%d') Ordr_Dt, OUTSTANDING Excptn_Code, dscr Product, "Order not shipped"
from
(
select tcust.code, firm, tpurcd.recv, "OUTSTANDING", dscr
from tcust
join tpurcd on tcust.code=tpurcd.cust
join tprod  on tpurcd.prod=tprod.code
left join tshipd on (tshipd.cust=tcust.code and tshipd.prod=tprod.code and tpurcd.recv=tshipd.recv)
where shpd is NULL
group by tcust.code, tpurcd.recv, dscr
) N

-- Result: this includes INCOMPLETE order of 4th Feb for c003 hence we need to write the query at prod ordered and prod shipped for each customer by order date.
Cust_ID	Cust_Name	Ordr_Dt	Excptn_Code	Product	Order not shi..
c003	Contiguous Corp.	2002-02-04	OUTSTANDING	Kensington	Order not shipped
c003	Contiguous Corp.	2002-02-12	OUTSTANDING	Huntington	Order not shipped
c006	Incongruous Int.	2002-02-20	OUTSTANDING	Arlington	Order not shipped
c006	Incongruous Int.	2002-02-20	OUTSTANDING	Huntington	Order not shipped
c006	Incongruous Int.	2002-02-20	OUTSTANDING	Lexington	Order not shipped
c006	Incongruous Int.	2002-02-20	OUTSTANDING	Wilmington	Order not shipped

-- query attempt 5:

select *,
(
case
when Excptn_Code='INCOMPLETE' then 'Customer is sent an incomplete shipment'
when Excptn_Code='OUTSTANDING' then 'Order has not been shipped'
else 'err'
end
) Explanation
from
(
select tcust.code Cust_ID, firm Cust_Name, date_format(tpurcd.recv,'%Y-%m-%d') Ordr_Dt, group_concat(dscr order by dscr separator ', ') Products,
(case
when count(tshipd.prod)=0 and count(tpurcd.prod)<>0 then "OUTSTANDING"
when count(tshipd.prod)>0 and count(tpurcd.prod)>count(tshipd.prod) then "INCOMPLETE"
when count(tpurcd.prod)=count(tshipd.prod) then "COMPLETE"
else "err"
end
) Excptn_Code
from tcust
join tpurcd on tcust.code=tpurcd.cust
join tprod  on tpurcd.prod=tprod.code
left join tshipd on (tshipd.cust=tcust.code and tshipd.prod=tprod.code and tpurcd.recv=tshipd.recv)
group by tcust.code, tpurcd.recv
) N
where Excptn_Code!='COMPLETE'

-- Result:
Cust_ID	Cust_Name	Ordr_Dt	Products	Excptn_Code	Explanation
c003	Contiguous Corp.	2002-02-04	Bennington, Kensington, Wilmington	INCOMPLETE	Customer is sent an incomplete shipment
c003	Contiguous Corp.	2002-02-12	Huntington	OUTSTANDING	Order has not been shipped
c006	Incongruous Int.	2002-02-20	Arlington, Huntington, Lexington, Wilmington	OUTSTANDING	Order has not been shipped

-- query attempt 6: merge queries 3 and 5 UNION

Select Cust_ID, Cust_Name, Date, "RETURN" as Excptn_Code, Product_Ordr, Explanation
from
(
select tcust.code Cust_ID, firm Cust_Name, date_format(recv,'%Y-%m-%d') Date, "RETURN", dscr Product_Ordr, expl Explanation
from tretn
join tcust on tretn.cust=tcust.code
join tprod on tretn.prod=tprod.code
order by Date
) N

UNION

select *,
(
case
when Excptn_Code='INCOMPLETE' then 'Customer is sent an incomplete shipment'
when Excptn_Code='OUTSTANDING' then 'Order has not been shipped'
else 'err'
end
) Explanation
from
(
select tcust.code Cust_ID, firm Cust_Name, date_format(tpurcd.recv,'%Y-%m-%d') Ordr_Dt, 
(case
when count(tshipd.prod)=0 and count(tpurcd.prod)<>0 then "OUTSTANDING"
when count(tshipd.prod)>0 and count(tpurcd.prod)>count(tshipd.prod) then "INCOMPLETE"
when count(tpurcd.prod)=count(tshipd.prod) then "COMPLETE"
else "err"
end
) Excptn_Code, group_concat(dscr order by dscr separator ', ') Products
from tcust
join tpurcd on tcust.code=tpurcd.cust
join tprod  on tpurcd.prod=tprod.code
left join tshipd on (tshipd.cust=tcust.code and tshipd.prod=tprod.code and tpurcd.recv=tshipd.recv)
group by tcust.code, tpurcd.recv
) N
where Excptn_Code!='COMPLETE'

-- Result:
Cust_ID	Cust_Name	Date	Excptn_Code	Product_Ordr	Explanation
c002	Inconspicuous Inc.	2002-02-01	RETURN	Huntington	Badly contaminated.
c002	Inconspicuous Inc.	2002-02-01	RETURN	Worthington	The wrong shade of magnolia.
c005	Assiduous Assoc.	2002-02-15	RETURN	Kensington	Reminiscent of spouse.
c006	Incongruous Int.	2002-01-28	RETURN	Huntington	Took off all the handles and the things that held the candles.
c006	Incongruous Int.	2002-02-10	RETURN	Worthington	Sub-space phase adjustment coil burnt out.
c003	Contiguous Corp.	2002-02-04	INCOMPLETE	Bennington, Kensington, Wilmington	Customer is sent an incomplete shipment
c003	Contiguous Corp.	2002-02-12	OUTSTANDING	Huntington	Order has not been shipped
c006	Incongruous Int.	2002-02-20	OUTSTANDING	Arlington, Huntington, Lexington, Wilmington	Order has not been shipped

-- 2.For each item, calculate the total number currently in stock based on the most recent stock check and deliveries/shipments since that date. 
You should assume that customer returned items are put back in stock.

-- query attempt 1: return stock

select prod, date_format(recv,'%Y-%m-%d') Dt, qnty
from tretn

-- Result:
prod	Dt	qnty
p008	2002-02-01	5
p009	2002-02-01	1
p001	2002-02-15	1
p008	2002-01-28	1
p009	2002-02-10	5

-- query attempt 2: last stock check

select prod, date_format(chck,'%Y-%m-%d') dt, qnty
from
(
select prod, chck, qnty, rank() over(partition by prod order by chck Desc) R
from tstck
) Stock_Check
where R=1

-- Result:
prod	dt	qnty
p001	2002-01-10	40
p002	2002-02-03	40
p003	2002-01-10	40
p004	2002-01-10	40
p005	2002-02-02	30
p006	2002-01-10	40
p007	2002-02-02	39
p008	2002-01-10	40
p009	2002-01-10	40
p010	2002-02-02	25

-- query attempt 3: stock chck considering return

select SP, SD, 
(case
when RD>SD then SQ+RQ
else SQ
end
) Stck_Ret
from
(
select Stock_Check.prod SP, date_format(chck,'%Y-%m-%d') SD, Stock_Check.qnty SQ, Returns.prod RP, Dt RD, Returns.qnty RQ
from
(
select prod, chck, qnty, rank() over(partition by prod order by chck Desc) R
from tstck
) Stock_Check
left join (select prod, date_format(recv,'%Y-%m-%d') Dt, qnty
from tretn) Returns 
on Stock_Check.prod=Returns.prod
where R=1
) StockwRet

-- Result: incorrect due to multiple quantities of the same product.
SP	SD	Stck_Ret
p008	2002-01-10	45
p009	2002-01-10	41
p001	2002-01-10	41
p008	2002-01-10	41
p009	2002-01-10	45
p002	2002-02-03	40
p003	2002-01-10	40
p004	2002-01-10	40
p005	2002-02-02	30
p006	2002-01-10	40
p007	2002-02-02	39
p010	2002-02-02	25

-- query attempt 4: redo the prev attempt

select SP, SD, 
(case
when RD>=SD then SQ+sum(RQ)
else SQ
end
) Stck_Ret
from
(
select Stock_Check.prod SP, date_format(chck,'%Y-%m-%d') SD, Stock_Check.qnty SQ, Returns.prod RP, Dt RD, Returns.qnty RQ
from
(
select prod, chck, qnty, rank() over(partition by prod order by chck Desc) R
from tstck
) Stock_Check
left join (select prod, date_format(recv,'%Y-%m-%d') Dt, qnty
from tretn) Returns 
on Stock_Check.prod=Returns.prod
where R=1
) StockwRet
group by SP

-- Result:
SP	SD	Stck_Ret
p001	2002-01-10	41
p002	2002-02-03	40
p003	2002-01-10	40
p004	2002-01-10	40
p005	2002-02-02	30
p006	2002-01-10	40
p007	2002-02-02	39
p008	2002-01-10	46
p009	2002-01-10	46
p010	2002-02-02	25

-- query attempt 5: shipped products count

select prod, date_format(shpd,'%Y-%m-%d') Shpdt, qnty
from tshipd
order by prod, Shpdt Desc

-- Result:
prod	Shpdt	qnty
p001	2002-02-18	5
p001	2002-02-13	1
p001	2002-02-13	5
p001	2002-02-11	5
p003	2002-02-18	4
p003	2002-02-13	4
p003	2002-02-09	5
p003	2002-02-05	3
p004	2002-02-18	1
p004	2002-02-18	3
p004	2002-02-17	1
p004	2002-02-12	5
p004	2002-02-10	1
p004	2002-02-07	5
p005	2002-02-18	3
p005	2002-02-18	5
p005	2002-02-13	3
p005	2002-02-09	2
p005	2002-02-05	4
p005	2002-01-28	3
p005	2002-01-27	1
p006	2002-02-18	5
p006	2002-02-17	2
p006	2002-02-12	5
p006	2002-02-11	1
p006	2002-02-10	5
p006	2002-02-03	1
p007	2002-02-18	5
p007	2002-02-10	2
p007	2002-02-03	1
p007	2002-01-28	1
p008	2002-02-18	5
p008	2002-02-13	3
p008	2002-02-13	5
p008	2002-02-12	4
p008	2002-02-07	5
p008	2002-02-03	3
p008	2002-01-31	5
p008	2002-01-27	2
p010	2002-02-18	4
p010	2002-02-07	4
p010	2002-02-03	4
p010	2002-01-27	15

-- query attempt 6: combo of 4 and 5 logic of subtract if after or on date of Lstockcheck else stock as is



-- 3.Identify the best selling product line for each month. The best selling product is the one with the greatest value of orders.

select Month, dscr
from
(
select *, rank() over(partition by Month order by TotalSales Desc) R
from
(
select date_format(recv,'%M-%Y') Month, dscr,sum(pric*qnty) TotalSales
from tprod
join tpurcd on tprod.code=tpurcd.prod
group by Month Desc, dscr
) N
) M
where R=1
order by Month Desc

-- Result:
Month	dscr
January-2002	Coddington
February-2002	Bennington

