-- AdventureWorks

-- Graduated questions

-- Sample queries

-- 1.Show the CompanyName for James D. Kramer

select CompanyName
from Customer
where FirstName='James' and MiddleName='D.' and LastName='Kramer'

-- Correct answer
CompanyName
Refined Department Stores

-- 2.Show all the addresses listed for 'Modular Cycle Systems'

Select CompanyName, AddressType, AddressLine1
from Address
Join CustomerAddress on Address.AddressID=CustomerAddress.AddressID
Join Customer on Customer.CustomerID=CustomerAddress.CustomerID
where CompanyName = 'Modular Cycle Systems'

-- Correct answer
CompanyName	AddressType	AddressLine1
Modular Cycle Systems	Main Office	800 Interchange Blvd.
Modular Cycle Systems	Shipping	165 North Main

-- 3.Show OrdeQty, the Name and the ListPrice of the order made by CustomerID 635

Select OrderQty, Name, ListPrice
from
SalesOrderDetail
Join SalesOrderHeader on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
Join Product on
SalesOrderDetail.ProductID=Product.ProductID
where CustomerID =635

-- Correct answer
OrderQty	Name	ListPrice
2	ML Mountain Pedal	62.09
1	HL Mountain Frame - Silver, 42	1364.50
1	Mountain-500 Silver, 40	564.99
2	Mountain-400-W Silver, 40	769.49

-- AdventureWorks easy questions

-- 1.Show the first name and the email address of customer with CompanyName 'Bike World'

select FirstName, EmailAddress
from Customer
where CompanyName= 'Bike World'

-- Result:
FirstName	EmailAddress
Kerim	kerim0@adventure-works.com

-- 2.Show the CompanyName for all customers with an address in City 'Dallas'.

Select CompanyName
from Customer
join CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID
join Address on Address.AddressID=CustomerAddress.AddressID
where City='Dallas'

Result:
CompanyName
Town Industries
Elite Bikes
Elite Bikes
Third Bike Store
Unsurpassed Bikes
Rental Bikes

-- 3.How many items with ListPrice more than $1000 have been sold?

select sum(OrderQty) Total_Items, count(distinct(SalesOrderDetail.ProductID)) Distinct_Items, count(*) Orders_Placed
from SalesOrderDetail
join Product on SalesOrderDetail.ProductID=Product.ProductID
where ListPrice>1000

-- Result:
Total_Items	Distinct_Items	Orders_Placed
451	41	131

-- 4.Give the CompanyName of those customers with orders over $100000. Include the subtotal plus tax plus freight.

Select CompanyName,Concat("$",SubTotal+TaxAmt+Freight) TOV
from SalesOrderHeader
join Customer on Customer.CustomerID=SalesOrderHeader.CustomerID
where SubTotal + TaxAmt + Freight > 100000
Order by Customer.CustomerID

-- Result:
CompanyName	TOV
Action Bicycle Specialists	$119960.83
Metropolitan Bicycle Supply	$108597.96

-- 5.Find the number of left racing socks ('Racing Socks, L') ordered by CompanyName 'Riding Cycles'

Select CompanyName, sum(OrderQty)
from Product
join SalesOrderDetail on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderHeader.SalesOrderID=SalesOrderDetail.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
where Name = "Racing Socks, L" and CompanyName = 'Riding Cycles'

-- Result:
CompanyName	sum(OrderQty)
Riding Cycles	3

-- AdventureWorks medium questions

-- 6.A "Single Item Order" is a customer order where only one item is ordered. Show the SalesOrderID and the UnitPrice for every Single Item Order.

select SalesOrderID, UnitPrice
from SalesOrderDetail
where OrderQty=1
group by SalesOrderID

-- Result:
SalesOrderID	UnitPrice
71774	356.90
71776	63.90
71780	323.99
71782	1430.44
71783	72.16
71784	445.41
71796	602.35
71797	29.99
71815	202.33
71816	728.91
71831	1376.99
71832	41.99
71845	54.89
71846	818.70
71856	445.41
71858	445.41
71863	1020.59
71867	858.90
71897	1430.44
71898	1430.44
71899	113.00
71902	218.45
71915	48.59
71920	1020.59
71923	2.99
71935	24.29
71936	20.99

-- 7.Where did the racing socks go? List the product name and the CompanyName for all Customers who ordered ProductModel 'Racing Socks'.

Select Product.Name,CompanyName
from ProductModel
join Product on Product.ProductModelID=ProductModel.ProductModelID
join SalesOrderDetail on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderHeader.SalesOrderID=SalesOrderDetail.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
where ProductModel.Name = "Racing Socks"

-- Result:
Name	CompanyName
Racing Socks, L	Eastside Department Store
Racing Socks, L	Riding Cycles
Racing Socks, M	Thrifty Parts and Sales
Racing Socks, L	Sports Products Store
Racing Socks, M	Sports Products Store
Racing Socks, L	Essential Bike Works
Racing Socks, M	The Bicycle Accessories Company
Racing Socks, L	The Bicycle Accessories Company
Racing Socks, M	Remarkable Bike Store
Racing Socks, L	Remarkable Bike Store

-- 8.Show the product description for culture 'fr' for product with ProductID 736.

Select Description
from ProductDescription
join ProductModelProductDescription on ProductModelProductDescription.ProductDescriptionID=ProductDescription.ProductDescriptionID
join ProductModel on ProductModel.ProductModelID=ProductModelProductDescription.ProductModelID
join Product on Product.ProductModelID=ProductModel.ProductModelID
where culture='fr' and ProductID=736

-- Result:
Description
Le cadre LL en aluminium offre une conduite confortable, une excellente absorption des bosses pour un trÃ¨s bon rapport qualitÃ©-prix.

-- 9.Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest. For each order show the CompanyName and the SubTotal and the total weight of the order.

Select CompanyName, SubTotal, sum(OrderQty*Weight) total_weight
from SalesOrderHeader
join Customer on Customer.CustomerID=SalesOrderHeader.CustomerID
join SalesOrderDetail on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
join Product on SalesOrderDetail.ProductID=Product.ProductID
Group by SalesOrderDetail.SalesOrderID
Order by SubTotal Desc

-- Result:
CompanyName	SubTotal	total_weight
Action Bicycle Specialists	108561.83	1133911.56
Metropolitan Bicycle Supply	98278.69	679588.02
Bulk Discount Store	88812.86	34813.05
Eastside Department Store	83858.43	565638.72
Riding Cycles	78029.69	504095.33
Many Bikes Store	74058.81	744328.60
Instruments and Parts Company	63980.99	731576.77
Extreme Riding Supplies	57634.63	589939.11
Trailblazing Sports	41622.05	234328.12
Professional Sales and Service	39785.33	396843.63
Nearby Cycle Shop	38418.69	547260.47
Closest Bicycle Store	35775.21	340144.28
Thrilling Bike Tours	13823.71	191855.76
Paints and Solvents Company	12685.89	122609.42
Remarkable Bike Store	6634.30	45103.50
Engineered Bike Systems	3398.17	37420.66
Sports Products Store	3324.28	53389.08
Discount Tours	2980.79	14977.56
Sports Store	2453.76	38354.65
Coalition Bike Company	2415.67	29183.00
Aerobic Exercise Company	2137.23	6770.44
Tachometers and Accessories	2016.34	10591.33
Thrifty Parts and Sales	1141.58	3175.14
Vigorous Sports Store	1059.31	1043.26
Good Toys	880.35	2050.23
Transport Bikes	602.19	13301.08
Channel Outlet	550.39	
Futuristic Bikes	246.74	
The Bicycle Accessories Company	106.54	
West Side Mart	78.81	317.00
Essential Bike Works	40.90	

-- 10.How many products in ProductCategory 'Cranksets' have been sold to an address in 'London'?

Select sum(OrderQty)
from
ProductCategory
join Product on Product.ProductCategoryID=ProductCategory.ProductCategoryID
join SalesOrderDetail on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderHeader.SalesOrderID=SalesOrderDetail.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
join CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID
join Address on CustomerAddress.AddressID=Address.AddressID
where ProductCategory.Name ='Cranksets' and city = 'London'

-- Result:
sum(OrderQty)
9

-- AdventureWorks hard questions

-- 11.For every customer with a 'Main Office' in Dallas show AddressLine1 of the 'Main Office' and AddressLine1 of the 'Shipping' address - if there is no shipping address leave it blank. Use one row per customer.

select Main.customerID, Main.AddressLine1, Shipping.AddressLine1
from
(
select f.CustomerID, d.AddressLine1
from Address d
join CustomerAddress e on e.AddressID=d.AddressID
join Customer f on f.CustomerID=e.CustomerID
where d.City='Dallas' and e.AddressType='Main Office'
) Main
left join
(
select c.CustomerID, a.AddressLine1
from Address a
join CustomerAddress b on b.AddressID=a.AddressID
join Customer c on c.CustomerID=b.CustomerID
where a.City='Dallas' and b.AddressType='Shipping'
) Shipping
on Main.CustomerID=Shipping.CustomerID

-- Result:
CustomerID	AddressLine1	AddressLine1
112	P.O. Box 6256916	
130	Po Box 8259024	9178 Jumping St.
165	2500 North Stemmons Freeway	
201	Po Box 8035996	
256	99828 Routh Street, Suite 825	

-- 12.For each order show the SalesOrderID and SubTotal calculated three ways:
A) From the SalesOrderHeader
B) Sum of OrderQty*UnitPrice
C) Sum of OrderQty*ListPrice

Select distinct(SalesOrderHeader.SalesOrderID), SubTotal, sum(OrderQty*UnitPrice) STUP, sum(OrderQty*ListPrice) SLIP
from SalesOrderHeader
left join SalesOrderDetail on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
left join Product on SalesOrderDetail.ProductID=Product.ProductID
group by SalesOrderID

Result:
SalesOrderID	SubTotal	STUP	SLIP
71774	880.35	713.80	1189.66
71776	78.81	63.90	106.50
71780	38418.69	30600.81	56651.56
71782	39785.33	33319.68	55533.31
71783	83858.43	68141.99	121625.43
71784	108561.83	90341.14	151932.58
71796	57634.63	47848.02	79746.71
71797	78029.69	65218.20	108986.40
71815	1141.58	926.91	1544.86
71816	3398.17	2847.37	4745.68
71831	2016.34	1712.91	2854.91
71832	35775.21	29187.03	50559.01
71845	41622.05	34208.70	57768.21
71846	2453.76	1929.58	3592.65
71856	602.19	500.30	833.84
71858	13823.71	11528.80	19214.74
71863	3324.28	2778.20	4633.78
71867	1059.31	858.90	1431.50
71885	550.39	524.64	874.44
71895	246.74	221.24	368.76
71897	12685.89	10585.01	17641.75
71898	63980.99	53248.57	88747.82
71899	2415.67	1901.38	3545.67
71902	74058.81	60526.52	106151.57
71915	2137.23	1732.86	2888.15
71917	40.90	37.73	62.93
71920	2980.79	2527.08	4211.88
71923	106.54	97.49	166.81
71935	6634.30	5535.13	9229.27
71936	98278.69	80142.85	138124.87
71938	88812.86	5102.95	8504.95
71946	38.95		

-- 13.Show the best selling item by value.

-- Query 1: shows top 10 best-selling items by sales value

Select distinct(Product.ProductID), Product.Name, sum(OrderQty*UnitPrice) SaleValue, sum(OrderQty*UnitPrice)-sum(OrderQty*UnitPriceDiscount)-sum(OrderQty*StandardCost) NetProfit
from SalesOrderHeader
left join SalesOrderDetail on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
left join Product on SalesOrderDetail.ProductID=Product.ProductID
group by Product.ProductID
order by SaleValue Desc
Limit 10

-- Result:
ProductID	Name	SaleValue	NetProfit
969	Touring-1000 Blue, 60	37191.44	-1339.00
783	Mountain-200 Black, 42	37178.73	3375.27
782	Mountain-200 Black, 38	35801.74	3250.26
976	Road-350-W Yellow, 48	33509.58	-6545.79
957	Touring-1000 Yellow, 60	23745.32	-1447.90
967	Touring-1000 Blue, 50	22887.04	-824.00
780	Mountain-200 Silver, 42	20879.85	1895.55
973	Road-350-W Yellow, 40	20411.80	-1238.40
784	Mountain-200 Black, 46	19277.86	1750.14
781	Mountain-200 Silver, 46	18095.87	1642.81

-- Query 2 shows the top 10 best-selling items by profit value

Select distinct(Product.ProductID), Product.Name, sum(OrderQty*UnitPrice) SaleValue, sum(OrderQty*UnitPrice)-sum(OrderQty*UnitPriceDiscount)-sum(OrderQty*StandardCost) ProfitValue
from SalesOrderHeader
left join SalesOrderDetail on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
left join Product on SalesOrderDetail.ProductID=Product.ProductID
group by Product.ProductID
order by ProfitValue Desc
Limit 10

-- Result:
ProductID	Name	SaleValue	ProfitValue
783	Mountain-200 Black, 42	37178.73	3375.27
782	Mountain-200 Black, 38	35801.74	3250.26
780	Mountain-200 Silver, 42	20879.85	1895.55
784	Mountain-200 Black, 46	19277.86	1750.14
781	Mountain-200 Silver, 46	18095.87	1642.81
779	Mountain-200 Silver, 38	15311.89	1390.07
748	HL Mountain Frame - Silver, 38	13099.20	1144.00
864	Classic Vest, S	2968.93	994.63
743	HL Mountain Frame - Black, 42	9717.12	848.64
876	Hitch Rack - 4-Bike	2088.00	786.48

-- 14.Show how many orders are in the following ranges (in $):

    RANGE      Num Orders      Total Value
    0-  99
  100- 999
 1000-9999
10000-

-- Query attempt 1: without the pivot of RANGES

Select count(SalesOrderID) Num_Orders, sum(OrderQty*UnitPrice) Total_Value
from SalesOrderDetail

-- Result:
Num_Orders	Total_Value
500	644909.69

-- Query attempt 2:
-- will need to add another column of RANGE hence the way is to add a case when
-- pivot break up must add up to the num_orders and total_value

Select Novo.RANGE, Novo.Num_Orders, Novo.Total_Value
from
(
Select 
(case
when sum(OrderQty*UnitPrice) between 0 and 99 then "0-99"
when sum(OrderQty*UnitPrice) between 100 and 999 then "100-999"
when sum(OrderQty*UnitPrice) between 1000 and 9999 then "1000-9999"
when sum(OrderQty*UnitPrice) >=10000 then "10000+"
else "Error"
end) "RANGE", count(SalesOrderID) Num_Orders, sum(OrderQty*UnitPrice) Total_Value
from SalesOrderDetail
Group by SalesOrderID
) Novo
Group by Novo.RANGE

-- Result: INCORRECT because total number of orders is higher than actual  and total valiue is not adding up
RANGE	Num_Orders	Total_Value
0-99	1	63.90
100-999	2	713.80
1000-9999	7	2847.37
10000+	29	30600.81

-- Query attempt 3: NAILED IT!
-- Seeing there are only 31 distinct orderdetailids and sum is 644909.

select Novo.RANGE, Count(Novo.Total_Value)"Num Orders", Sum(Novo.Total_Value)"Total Value"
from
(
select 
(case 
when sum(OrderQty*UnitPrice) between 0 and 99 then "0-99"
when sum(OrderQty*UnitPrice) between 100 and 999 then "100-999"
when sum(OrderQty*UnitPrice) between 1000 and 9999 then "1000-9999"
when sum(OrderQty*UnitPrice)>10000 then "10000-" 
else "error" end) "RANGE", count(distinct(SalesOrderID))"Num_Orders", sum(OrderQty*UnitPrice) as "Total_Value"
from SalesOrderDetail a
group by SalesOrderID
) Novo
group by Novo.RANGE

-- 15.Identify the three most important cities. Show the breakdown of top-level product category against city.

-- Top-level product category per city means two things cities ranked by quantity or salesvalue

-- query attempt 1 gives top 3 cities

Select City, sum(OrderQty*UnitPrice) SalesValue
from ProductCategory 
join Product on ProductCategory.ProductCategoryID=Product.ProductCategoryID
join SalesOrderDetail on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
join CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID
join Address on Address.AddressID=CustomerAddress.AddressID
group by City
order by SalesValue Desc
Limit 3

-- query attempt 2 is to find the break up of product categories across cities

Select City, a.Name
from ProductCategory a
join Product b on a.ProductCategoryID=b.ProductCategoryID
join SalesOrderDetail c on c.ProductID=b.ProductID
join SalesOrderHeader d on c.SalesOrderID=d.SalesOrderID
join Customer e on d.CustomerID=e.CustomerID
join CustomerAddress f on f.CustomerID=e.CustomerID
join Address g on g.AddressID=f.AddressID

-- Query 3 combines queries 1 and 2: WORKS!

Select Novo.City, Novo2.Name, Novo2.SalesValue
from
(
Select City, sum(OrderQty*UnitPrice) SalesValue
from ProductCategory 
join Product on ProductCategory.ProductCategoryID=Product.ProductCategoryID
join SalesOrderDetail on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
join CustomerAddress on CustomerAddress.CustomerID=Customer.CustomerID
join Address on Address.AddressID=CustomerAddress.AddressID
group by City
order by SalesValue Desc
Limit 3
) Novo
left join
(
Select City, a.Name, sum(OrderQty*UnitPrice) SalesValue
from ProductCategory a
join Product b on a.ProductCategoryID=b.ProductCategoryID
join SalesOrderDetail c on c.ProductID=b.ProductID
join SalesOrderHeader d on c.SalesOrderID=d.SalesOrderID
join Customer e on d.CustomerID=e.CustomerID
join CustomerAddress f on f.CustomerID=e.CustomerID
join Address g on g.AddressID=f.AddressID
group by City, Name
Order by SalesValue Desc
) Novo2
on Novo.City=Novo2.City
order by Novo.City, Novo2.SalesValue Desc 

-- Result:
City	Name	SalesValue
London	Mountain Bikes	50881.99
London	Mountain Frames	24018.80
London	Road Bikes	5102.95
London	Cranksets	1773.81
London	Shorts	1072.14
London	Derailleurs	638.85
London	Pedals	390.32
London	Bottom Brackets	388.73
London	Handlebars	292.63
London	Saddles	284.43
London	Brakes	255.60
London	Gloves	88.14
London	Chains	36.42
London	Helmets	20.99
Union City	Road Bikes	53478.76
Union City	Road Frames	10031.90
Union City	Jerseys	1597.49
Union City	Vests	904.95
Union City	Helmets	721.69
Union City	Pedals	490.73
Union City	Hydration Packs	296.91
Union City	Gloves	264.42
Union City	Bike Racks	144.00
Union City	Handlebars	72.16
Union City	Caps	57.31
Union City	Cleaners	38.16
Union City	Bottles and Cages	29.90
Union City	Tires and Tubes	8.22
Union City	Socks	5.39
Woolston	Touring Bikes	77040.15
Woolston	Touring Frames	9430.95
Woolston	Jerseys	1178.02
Woolston	Vests	1108.19
Woolston	Helmets	495.36
Woolston	Bike Racks	432.00
Woolston	Hydration Packs	296.91
Woolston	Gloves	161.59
Woolston	Saddles	63.16
Woolston	Caps	53.90
Woolston	Cleaners	38.16
Woolston	Bottles and Cages	31.79
Woolston	Tires and Tubes	10.96

-- AdventureWorks resit questions

-- 1.List the SalesOrderNumber for the customer 'Good Toys' 'Bike World'

Select CompanyName, SalessOrderNumber 
from SalesOrderHeader
right join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
where CompanyName='Good Toys' or CompanyName='Bike World'

-- Result:
CompanyName	SalessOrderNu..
Good Toys	SO71774
Bike World	

-- 2.List the ProductName and the quantity of what was ordered by 'Futuristic Bikes'

select Product.Name, OrderQty
from SalesOrderDetail
join Product on SalesOrderDetail.ProductID=Product.ProductID
join SalesOrderHeader on SalesOrderDetail.SalesOrderID=SalesOrderHeader.SalesOrderID
join Customer on SalesOrderHeader.CustomerID=Customer.CustomerID
where CompanyName= 'Futuristic Bikes'

-- Result:
Name	OrderQty
ML Mountain Seat/Saddle	2
Long-Sleeve Logo Jersey, L	2
Classic Vest, S	3

-- 3.List the name and addresses of companies containing the word 'Bike' (upper or lower case) and companies containing 'cycle' (upper or lower case). Ensure that the 'bike's are listed before the 'cycles's.

select CompanyName, AddressLine1
from Customer
join CustomerAddress on Customer.CustomerID=CustomerAddress.CustomerID
join Address on Address.AddressID=CustomerAddress.AddressID
where CompanyName LIKE "%BIKE%" or CompanyName LIKE "%bike%" 

UNION

select CompanyName, AddressLine1
from Customer
join CustomerAddress on Customer.CustomerID=CustomerAddress.CustomerID
join Address on Address.AddressID=CustomerAddress.AddressID
where CompanyName LIKE "%CYCLE%" or CompanyName LIKE "%cycle%" 

-- Result:
CompanyName	AddressLine1
A Bike Store	2251 Elliot Avenue
Advanced Bike Components	12345 Sterling Avenue
Associated Bikes	5420 West 22500 South
Sharp Bikes	52560 Free Street
Bikes and Motorbikes	22580 Free Street
Bike World	60025 Bollinger Canyon Road
Coalition Bike Company	Corporate Office
Two Bike Shops	35525-9th Street Sw
Frugal Bike Shop	2575 West 2700 South
Gear-Shift Bikes Limited	2512-4th Ave Sw
Greater Bike Store	55 Lakeshore Blvd East
Largest Bike Store	63 W Monroe
Many Bikes Store	Receiving
Preferred Bikes	Incom Sports Center
Scooters and Bikes Store	258101 Nw Evergreen Parkway
Stationary Bikes and Stands	Sapp Road West
More Bikes!	25600 E St Andrews Pl
Mountain Bike Center	6756 Mowry
Rapid Bikes	992 St Clair Ave East
Elite Bikes	Po Box 8259024
Elite Bikes	9178 Jumping St.
Eighth Bike Store	2500 N Serene Blvd
South Bike Company	Po Box 83270
Lots of Bikes Storehouse	4255 East Lies Road
Initial Bike Company	789 West Alameda
Fleet Bikes	54254 Pacific Ave.
Futuristic Bikes	25136 Jefferson Blvd.
Third Bike Store	2500 North Stemmons Freeway
Farthermost Bike Shop	99000 S. Avalon Blvd. Suite 750
Economy Bikes Company	72502 Eastern Ave.
Full-Service Bike Store	9920 North Telegraph Rd.
Go-cart and Bike Specialists	2509 W. Frankford
Weekend Bike Tours	630 N. Capitol Ave.
Thrilling Bike Tours	4660 Rodeo Road
Authorized Bike Sales and Rental	490 Ne 4th St
Basic Bike Company	15 East Main
Unsurpassed Bikes	Po Box 8035996
Two-Seater Bikes	5700 Legacy Dr
Best o' Bikes	250880 Baur Blvd
Bike Dealers Association	9952 E. Lohman Ave.
Sample Bike Store	2530 South Colorado Blvd.
Sample Bike Store	2000 300th Street
Home Town Bike Store	955 Green Valley Crescent
Large Bike Shop	600 Boul. Rene-levesque Ouest
Express Bike Services	586 Fulham Road,
Rental Bikes	99828 Routh Street, Suite 825
Highway Bike Shop	Simi @ The Plaza
Farthest Bike Store	45259 Canada Way
A Typical Bike Shop	One Dancing, Rr No. 25
Standard Bikes	9979 Bayview Drive
Results truncated. Only the first 50 rows have been shown.

-- 4.Show the total order value for each CountryRegion. List by value with the highest first.

select CountyRegion, sum(SubTotal+TaxAmt+Freight) TOV
from Address
join CustomerAddress on CustomerAddress.AddressID=Address.AddressID
join Customer on Customer.CustomerID=CustomerAddress.CustomerID
join SalesOrderHeader on SalesOrderHeader.CustomerID=Customer.CustomerID
group by CountyRegion
order by sum(SubTotal+TaxAmt+Freight) Desc

-- Result:
CountyRegion	TOV
United Kingdom	572496.55
United States	383807.02

-- 5.Find the best customer in each region.

-- Query 1 logic: Tried union logic with and without named tables but it didnt work.

UNION

select e.CountyRegion, g.CompanyName, sum(h.SubTotal+h.TaxAmt+h.Freight) TOV
from Address e
join CustomerAddress f on f.AddressID=e.AddressID
join Customer g on g.CustomerID=f.CustomerID
join SalesOrderHeader h on h.CustomerID=g.CustomerID
where e.CountyRegion='United Kingdom'
group by g.CompanyName
order by sum(h.SubTotal+h.TaxAmt+h.Freight) Desc

select CountyRegion, CompanyName, sum(SubTotal+TaxAmt+Freight) TOV
from Address
join CustomerAddress on CustomerAddress.AddressID=Address.AddressID
join Customer on Customer.CustomerID=CustomerAddress.CustomerID
join SalesOrderHeader on SalesOrderHeader.CustomerID=Customer.CustomerID
where CountyRegion='United Kingdom'
group by CompanyName
order by sum(SubTotal+TaxAmt+Freight) Desc
Limit 1

UNION 

select CountyRegion, CompanyName, sum(SubTotal+TaxAmt+Freight) TOV
from Address
join CustomerAddress on CustomerAddress.AddressID=Address.AddressID
join Customer on Customer.CustomerID=CustomerAddress.CustomerID
join SalesOrderHeader on SalesOrderHeader.CustomerID=Customer.CustomerID
where CountyRegion='United States'
group by CompanyName
order by sum(SubTotal+TaxAmt+Freight) Desc
Limit 1

-- query 2 logic: Rank over partition and SUCCESS!

select Novo.CountyRegion, Novo.CompanyName, Novo.TOV
from
(
select a.CountyRegion, c.CompanyName, sum(d.SubTotal+d.TaxAmt+d.Freight) TOV, rank() over(partition by a.CountyRegion order by sum(d.SubTotal+d.TaxAmt+d.Freight) Desc) RANK
from Address a
join CustomerAddress b on b.AddressID=a.AddressID
join Customer c on c.CustomerID=b.CustomerID
join SalesOrderHeader d on d.CustomerID=c.CustomerID
group by c.CompanyName
order by sum(d.SubTotal+d.TaxAmt+d.Freight) Desc
) Novo
where Novo.RANK=1

-- Result:
CountyRegion	CompanyName	TOV
United Kingdom	Action Bicycle Specialists	119960.83
United States	Eastside Department Store	92663.56
