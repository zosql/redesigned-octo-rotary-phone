-- Dressmaker database

-- 1.Some sample queries

SELECT order_ref, line_no, ol_style, ol_size, ol_material
 FROM order_line

-- Result:
order_ref	line_no	ol_style	ol_size	ol_material
1	1	1	8	1
1	2	2	8	2
2	1	3	10	3
2	2	4	10	4
2	3	5	10	5
3	1	6	12	6
4	1	1	14	7
4	2	2	14	10
5	1	3	16	9
5	2	4	16	10
5	3	5	16	11
6	1	1	8	12
6	2	2	8	13
6	3	3	8	14
7	1	4	10	1
7	2	5	10	2
7	3	6	10	3
8	1	6	12	4
8	2	5	12	5
8	3	4	12	6
9	1	3	14	7
10	1	2	16	8
10	2	1	16	9
11	1	1	18	10
11	2	2	18	11
11	3	3	18	12
12	1	4	8	13
12	2	5	8	14
12	3	6	8	1
12	4	1	8	2
12	5	2	8	3

-- 2.A sample join:

SELECT order_ref, line_no, fabric, colour, pattern, cost
  FROM order_line, material
 WHERE ol_material = material_no

-- Result:
order_ref	line_no	fabric	colour	pattern	cost
1	1	Silk	Black	Plain	7
1	2	Silk	Red Abstract	Printed	10
2	1	Cotton	Yellow Stripe	Woven	3
2	2	Cotton	Green Stripe	Woven	3
2	3	Cotton	Black Dotted	...

-- 3.To get a description of the garment we need to join the garment table. The join condition is that the ol_style in order_line matches the style_no in garment.

SELECT order_ref, line_no, description
  FROM order_line, garment
 WHERE ol_style = style_no

-- Result:
order_ref	line_no	description
1	1	Trousers
6	1	Trousers
12	4	Trousers
4	1	Trousers
...

-- 4.If we need both the description and the fabric we can join both material and garment to the order_line table. The join conditions are combined with "AND"

SELECT order_ref, line_no, fabric, description
  FROM order_line, material, garment
 WHERE ol_style = style_no
   AND ol_material = material_no

-- Result:
order_ref	line_no	fabric	description
1	1	Silk	Trousers
6	1	Serge	Trousers
12	4	Silk	Trousers
4	1	Polyester	Trousers
10	2	Cotton	Trouser...

-- 5.The quantities table tells us how much material is required for every garment for every size available. The join between the order_line and quantities is unusual in that it involves two fields. This can be seen by the fact that quantities has a composite key.

SELECT order_ref, line_no, quantity
  FROM order_line, quantities
 WHERE ol_style = style_q
   AND ol_size  = size_q

-- Result:
order_ref	line_no	quantity
1	1	2.7
6	1	2.7
12	4	2.7
4	1	2.8
10	2	3
...

-- 6.Customers place orders - each order contains many lines - each line of the order refers to a garment:

SELECT c_name, order_date, order_no, line_no
   FROM jmcust, dress_order, order_line
  WHERE          jmcust.c_no = dress_order.cust_no
  AND   dress_order.order_no = order_line.order_ref

-- Result:
c_name	order_date	order_no	line_no
Mrs Peacock	Thu, 10 Jan 2002 00:00:00 GMT	1	1
Mrs Peacock	Thu, 10 Jan 2002 00:00:00 GMT	1	2
Dr Green	Fri, 11 Jan 2002 00:00:00 GMT	2	1
Dr Green	Fri, 11 Jan 2002 00:00:00 ...

-- 7.There's also a dress maker table, and a table called construction which gives you information about who made which order and when:

SELECT d_no, d_name, construction.order_ref, construction.line_ref, start_date, finish_date
 FROM dressmaker, order_line, construction
 WHERE  d_no=maker  
 AND order_line.order_ref=construction.order_ref 
 AND order_line.line_no=construction.line_ref

-- Result:
d_no	d_name	order_ref	line_ref	start_date	finish_date
1	Mrs Hem	1	1	Thu, 10 Jan 2002 00:00:00 GMT	Tue, 05 Mar 2002 00:00:00 GMT
1	Mrs Hem	4	2	Sat, 02 Feb 2002 00:00:00 GMT	Mon, 25 Mar 2002 00:00:00 GMT
1	Mrs Hem	7	1	Thu, 21 Feb 2002 00 ...

-- Dressmaker database: easy questions

-- 1.List the post code, order number, order date and garment descriptions for all items associated with Ms Brown.

select c_post_code, order_no, line_no,order_date,  description
from jmcust, dress_order, garment, order_line, quantities
where jmcust.c_no=dress_order.cust_no
and dress_order.order_no=order_line.order_ref
and (order_line.ol_style=quantities.style_q
and order_line.ol_size=quantities.size_q)
and quantities.style_q=garment.style_no
and c_name='Ms Brown'
order by order_no, line_no

-- Result:
c_post_code	order_no	line_no	order_date	description
B2 5AB	7	1	Thu, 21 Feb 2002 00:00:00 GMT	Short Skirt
B2 5AB	7	2	Thu, 21 Feb 2002 00:00:00 GMT	Sundress
B2 5AB	7	3	Thu, 21 Feb 2002 00:00:00 GMT	Suntop
B2 5AB	9	1	Wed, 27 Feb 2002 00:00:00 GMT	Shorts

-- 2.List the customer name, postal information, order date and order number of all orders that have been completed.

select c_name, c_post_code,order_date,order_no, line_no,completed
from jmcust, dress_order,order_line
where jmcust.c_no=dress_order.cust_no
and dress_order.order_no=order_line.order_ref
and completed = 'Y'

-- Result:
c_name	c_post_code	order_date	order_no	line_no	completed
Mrs Peacock	DD6 9NM	Thu, 10 Jan 2002 00:00:00 GMT	1	1	Y
Mrs Peacock	DD6 9NM	Thu, 10 Jan 2002 00:00:00 GMT	1	2	Y
Dr Green	SJ4 4WE	Fri, 11 Jan 2002 00:00:00 GMT	2	1	Y
Dr Green	SJ4 4WE	Fri, 11 Jan 2002 00:00:00 GMT	2	2	Y
Dr Green	SJ4 4WE	Fri, 11 Jan 2002 00:00:00 GMT	2	3	Y
Ms Muir	H2 7CV	Sun, 20 Jan 2002 00:00:00 GMT	3	1	Y
Mr Brass	FG24 9NM	Sat, 02 Feb 2002 00:00:00 GMT	4	1	Y
Mr Brass	FG24 9NM	Sat, 02 Feb 2002 00:00:00 GMT	4	2	Y
Ms White	E24 8PQ	Sun, 03 Feb 2002 00:00:00 GMT	5	1	Y
Ms White	E24 8PQ	Sun, 03 Feb 2002 00:00:00 GMT	5	2	Y
Ms White	E24 8PQ	Sun, 03 Feb 2002 00:00:00 GMT	5	3	Y

-- 3.Which garments have been made or are being made from 'red abstract' or 'blue abstract' coloured materials.

select colour, description, order_ref, line_no
from garment, order_line, material
where garment.style_no=order_line.ol_style 
and order_line.ol_material=material.material_no
and colour IN ('red abstract','blue abstract')
order by colour, order_ref, line_no

-- Result:
colour	description	order_ref	line_no
Blue Abstract	Long Skirt	6	2
Blue Abstract	Short Skirt	12	1
Red Abstract	Long Skirt	1	2
Red Abstract	Sundress	7	2
Red Abstract	Trousers	12	4

-- 4.How many garments has each dressmaker constructed? You should give the number of garments and the name and postal information of each dressmaker.

select d_name Dressmaker, d_post_code Postal_Info, count(finish_date) Finished, count(start_date)-count(finish_date) Unfinished
from dressmaker dm, construction c, order_line ol
where d_no=maker and (c.order_ref=ol.order_ref and c.line_ref=ol.line_no)
group by d_name
order by count(*) Desc, Dressmaker

-- Result:
Dressmaker	Postal_Info	Finished	Unfinished
Miss Stitch	DF4 7HJ	2	4
Mrs Hem	A12 6BC	2	3
Miss Pins	B4 9BL	1	3
Mr Needles	E12 6LG	4	0
Mr Seam	H45 7YH	1	3
Ms Sew	EF7 9KL	3	1
Mr Taylor	SH6 9RT	2	1

-- 5.Give the names of those dressmakers who have finished items made from silk for completed orders.

select d_name Dressmaker, count(finish_date) Finished_OC
from dressmaker dm, construction c, order_line ol, material m, dress_order do
where d_no=maker and (c.order_ref=ol.order_ref and c.line_ref=ol.line_no) and m.material_no=ol.ol_material
and do.order_no=ol.order_ref
and fabric='silk' and completed='Y'
group by d_name
order by count(*) Desc, Dressmaker

-- Result:
Dressmaker	Finished_OC
Mrs Hem	2
Miss Stitch	1
Mr Needles	1

-- Dressmaker medium

-- Dressmaker database: medium questions

-- 1. Assuming that any garment could be made in any of the available materials, list the garments (description, fabric, colour and pattern) 
which are expensive to make, that is, those for which the labour costs are 80% or more of the total cost.

select description,fabric,colour, pattern, (labour_cost+cost) Total_Cost, concat(round(labour_cost/(labour_cost+cost)*100), "%") Labor_Cost
from garment
cross join material
group by description,fabric,colour, pattern
having Labor_Cost>=80
order by description

-- Result:
description	fabric	colour	pattern	Total_Cost	Labor_Cost
Long Skirt	Cotton	Black Dotted	Woven	18	83%
Long Skirt	Cotton	Blue Abstract	Printed	18.5	81%
Long Skirt	Cotton	Blue Stripe	Woven	18	83%
Long Skirt	Cotton	Green Abstract	Printed	18.5	81%
Long Skirt	Cotton	Green Stripe	Woven	18	83%
Long Skirt	Cotton	Pink Check	Woven	18	83%
Long Skirt	Cotton	Red Stripe	Woven	18	83%
Long Skirt	Cotton	Yellow Stripe	Woven	18	83%
Long Skirt	Polyester	Pale Yellow	Printed	17.55	85%
Short Skirt	Cotton	Black Dotted	Woven	17.25	83%
Short Skirt	Cotton	Blue Abstract	Printed	17.75	80%
Short Skirt	Cotton	Blue Stripe	Woven	17.25	83%
Short Skirt	Cotton	Green Abstract	Printed	17.75	80%
Short Skirt	Cotton	Green Stripe	Woven	17.25	83%
Short Skirt	Cotton	Pink Check	Woven	17.25	83%
Short Skirt	Cotton	Red Stripe	Woven	17.25	83%
Short Skirt	Cotton	Yellow Stripe	Woven	17.25	83%
Short Skirt	Polyester	Pale Yellow	Printed	16.8	85%
Shorts	Polyester	Pale Yellow	Printed	12.55	80%
Sundress	Cotton	Black Dotted	Woven	23	87%
Sundress	Cotton	Blue Abstract	Printed	23.5	85%
Sundress	Cotton	Blue Stripe	Woven	23	87%
Sundress	Cotton	Green Abstract	Printed	23.5	85%
Sundress	Cotton	Green Stripe	Woven	23	87%
Sundress	Cotton	Pink Check	Woven	23	87%
Sundress	Cotton	Red Stripe	Woven	23	87%
Sundress	Cotton	Yellow Stripe	Woven	23	87%
Sundress	Polyester	Pale Yellow	Printed	22.55	89%
Sundress	Rayon	Red/Orange	Printed	24	83%
Trousers	Cotton	Black Dotted	Woven	21	86%
Trousers	Cotton	Blue Abstract	Printed	21.5	84%
Trousers	Cotton	Blue Stripe	Woven	21	86%
Trousers	Cotton	Green Abstract	Printed	21.5	84%
Trousers	Cotton	Green Stripe	Woven	21	86%
Trousers	Cotton	Pink Check	Woven	21	86%
Trousers	Cotton	Red Stripe	Woven	21	86%
Trousers	Cotton	Yellow Stripe	Woven	21	86%
Trousers	Polyester	Pale Yellow	Printed	20.55	88%
Trousers	Rayon	Red/Orange	Printed	22	82%

-- 2.List the descriptions and the number of orders of the less popular garments, that is those for which less than the average number of orders per garment have been placed. Also print out the average number of orders per garment. When calculating the average, ignore any garments for which no orders have been made.

select description LP_Garments, count(line_no) LP_Orders, (select avg(C)
from
(
select count(*) C
from order_line ol
join garment g on g.style_no=ol.ol_style
group by description
) Novo
) Avg_No_Orders
from garment
join order_line on style_no=ol_style
group by description
having LP_Orders <
(
select avg(C)
from
(
select count(*) C
from order_line ol
join garment g on g.style_no=ol.ol_style
group by description
) Novo
)

-- Result:
LP_Garments	LP_Orders	Avg_No_Orders
Short Skirt	5	5.1667
Shorts	5	5.1667
Sundress	5	5.1667
Suntop	4	5.1667

-- 3.Which is the most popular line, that is, the garment with the highest number of orders. Bearing in mind the fact that there may be several such garments, list the garment description(s) and number(s) of orders.

select description PL_Garments, count(line_no) PL_Orders
from garment
join order_line on style_no=ol_style
group by description
having PL_Orders >=
(select max(C)
from
(select count(*) C
from order_line ol
join garment g on g.style_no=ol.ol_style
group by description)Novo)

-- Result:
PL_Garments	PL_Orders
Long Skirt	6
Trousers	6

-- 4.List the descriptions, and costs of the more expensive size 8, Cotton garments which might be ordered, 
that is those costing more than the average (labour costs + material costs) to make.

select description, fabric, colour, pattern, size_q, round(cost*quantity+labour_cost,2) TC
from garment
cross join material
cross join quantities
where size_q=8 and fabric='Cotton'
and style_q=style_no
and cost*quantity+labour_cost > (select avg(TC)
from
(select round(cost*quantity+labour_cost,2) TC, description, colour, pattern, material_no, quantity
from garment
cross join material
cross join quantities
where size_q=8 and fabric='cotton' and style_q=style_no
order by description, colour, pattern, material_no, quantity
) Novo)
order by TC Desc

-- Result:
description	fabric	colour	pattern	size_q	TC
Sundress	Cotton	Blue Abstract	Printed	8	31.2
Sundress	Cotton	Green Abstract	Printed	8	31.2
Sundress	Cotton	Yellow Stripe	Woven	8	29.6
Sundress	Cotton	Green Stripe	Woven	8	29.6
Sundress	Cotton	Black Dotted	Woven	8	29.6
Sundress	Cotton	Red Stripe	Woven	8	29.6
Sundress	Cotton	Blue Stripe	Woven	8	29.6
Sundress	Cotton	Pink Check	Woven	8	29.6
Trousers	Cotton	Blue Abstract	Printed	8	27.45
Trousers	Cotton	Green Abstract	Printed	8	27.45
Long Skirt	Cotton	Blue Abstract	Printed	8	26.9
Long Skirt	Cotton	Green Abstract	Printed	8	26.9
Trousers	Cotton	Blue Stripe	Woven	8	26.1
Trousers	Cotton	Pink Check	Woven	8	26.1
Trousers	Cotton	Yellow Stripe	Woven	8	26.1
Trousers	Cotton	Green Stripe	Woven	8	26.1
Trousers	Cotton	Black Dotted	Woven	8	26.1
Trousers	Cotton	Red Stripe	Woven	8	26.1
Long Skirt	Cotton	Green Stripe	Woven	8	25.2
Long Skirt	Cotton	Black Dotted	Woven	8	25.2
Long Skirt	Cotton	Red Stripe	Woven	8	25.2
Long Skirt	Cotton	Blue Stripe	Woven	8	25.2
Long Skirt	Cotton	Pink Check	Woven	8	25.2
Long Skirt	Cotton	Yellow Stripe	Woven	8	25.2

-- 5.What is the most common size ordered for each garment type? List description, size and number of orders, 
assuming that there could be several equally popular sizes for each type.

-- query attempt 1:

select description, ol_size, C
from
(
select description, ol_size, C, dense_rank() over(partition by description order by C Desc) Rank
from
(
select description, ol_size, count(line_no) C
from garment,quantities, order_line
where style_no=style_q=ol_style
group by description, ol_size
) Novo
) Novo2
where Rank =1 

-- Result: answer seems fishy because for all garments the common size and the most no of orders is same.
description	ol_size	C
Long Skirt	8	18
Short Skirt	8	18
Shorts	8	18
Sundress	8	18
Suntop	8	18
Trousers	8	18

-- query attempt 2:

select description, size_q, C
from
(
select description, size_q, C, rank() over (partition by description order by C Desc) Rank
from
(
select description, size_q, count(*) C
from garment g
join quantities q on g.style_no=q.style_q
join order_line ol on ol.ol_style=q.style_q and q.size_q=ol.ol_size
group by description, size_q
order by description, count(*) Desc
) Novo
) Novo2
where Rank=1
order by C Desc, size_q Desc

-- Result: perfect!
description	size_q	C
Trousers	8	3
Long Skirt	8	3
Suntop	12	2
Sundress	10	2
Short Skirt	10	2
Shorts	18	1
Shorts	16	1
Shorts	14	1
Shorts	10	1
Shorts	8	1

-- query attempt 1 ws wrong because the size matching was not done between two tables

-- Dressmaker hard

-- Dressmaker database: hard questions

-- 2.It is decided to review the materials stock. How much did each material contribute to turnover in 2002?

select material_no, fabric, colour, pattern,
round(sum(cost*quantity),2) "TO_OC",
round((
(round(sum(cost*quantity),2))
/(select round(sum(cost*quantity),2)
from material, order_line, quantities, garment
where ol_material=material_no
and style_q=ol_style=style_no and size_q=ol_size)*100
),2) "%",
round(sum(labour_cost)+sum(cost*quantity),2) "TO_WL",
round((
(round(sum(labour_cost)+sum(cost*quantity),2))
/(select round(sum(labour_cost)+sum(cost*quantity),2) "TO_WL"
from material, order_line, quantities, garment
where ol_material=material_no
and style_q=ol_style=style_no and size_q=ol_size)*100
),2) "%"
from material, order_line, quantities, garment
where ol_material=material_no
and style_q=ol_style=style_no and size_q=ol_size
group by material_no

-- Result: turnover TO w/o labour of only cloth and TO w labour of only cloth
material_no	fabric	colour	pattern	TO_OC	%	TO_WL	%
1	Silk	Black	Plain	34.3	7.9	88.3	8.9
2	Silk	Red Abstract	Printed	93	21.43	147	14.82
3	Cotton	Yellow Stripe	Woven	17.1	3.94	71.1	7.17
4	Cotton	Green Stripe	Woven	6.6	1.52	42.6	4.29
5	Cotton	Black Dotted	Woven	19.2	4.42	55.2	5.56
6	Cotton	Red Stripe	Woven	6.6	1.52	42.6	4.29
7	Polyester	Pale Yellow	Printed	10.96	2.52	46.96	4.73
8	Cotton	Blue Stripe	Woven	12.6	2.9	30.6	3.08
9	Cotton	Pink Check	Woven	13.8	3.18	49.8	5.02
10	Silk	Green Abstract	Printed	124.5	28.68	178.5	17.99
11	Rayon	Red/Orange	Printed	38.8	8.94	74.8	7.54
12	Serge	Navy Blue	Woven	24.75	5.7	60.75	6.12
13	Cotton	Blue Abstract	Printed	16.1	3.71	52.1	5.25
14	Cotton	Green Abstract	Printed	15.75	3.63	51.75	5.22

-- 3.An order for shorts has just been placed and the work is to be distributed amongst the workforce,
and we wish to know how busy the shorts makers are.
For each of the workers who have experience of making shorts show the number of hours work that she is currently committed to, 
assuming a meagre wage of £4.50 per hour

-- query attempt 1: those with shorts making experience

select distinct(d_name)
from dressmaker d, construction c, order_line ol, garment g
where d_no=maker
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and style_no=ol_style and description='Shorts'
order by ol.order_ref

-- Result:
d_name
Mr Needles
Miss Stitch
Miss Pins
Mr Seam

-- query attempt 2: at the rate of 4.5 per hour how many hours can they dedicate

select d_name, round(labour_cost/4.5,2) hours
from dressmaker d, construction c, order_line ol, garment g
where style_no=ol_style
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and d_no=maker
and description='Shorts'
group by d_name

-- Result:
d_name	hours
Miss Pins	2.22
Miss Stitch	2.22
Mr Needles	2.22
Mr Seam	2.22

-- query attempt 3: how busy the dress makers are?

select d_name DM, round(sum(labour_cost/4.5),2) Cmtd_Hrs
from dressmaker d, construction c, order_line ol, garment g
where style_no=ol_style
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and d_no=maker
group by d_name

-- query attempt 4: business or committed hours of the shorts makers join 1 and 3

select Shorts_Makers, Cmtd_Hrs
from
(
select distinct(d_name) Shorts_Makers
from dressmaker d, construction c, order_line ol, garment g
where d_no=maker
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and style_no=ol_style and description='Shorts'
order by ol.order_ref
) Novo
join
(
select d_name DM, round(sum(labour_cost/4.5),2) Cmtd_Hrs
from dressmaker d, construction c, order_line ol, garment g
where style_no=ol_style
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and d_no=maker
group by d_name
) Novo2
where Novo.Shorts_Makers=Novo2.DM
order by Cmtd_Hrs Desc

-- Result: this was not right because i did not incorporate the fact that if the dressmakers have a finish date for line items then they are free for the hours
Shorts_Makers	Cmtd_Hrs
Miss Stitch	21.33
Mr Seam	15.11
Miss Pins	12.89
Mr Needles	10.83

-- query attempt 5:  query no 4 with incorporation of finish date is null so we can find the ongoing work of each dressmaker and assume the working hours.

select Shorts_Makers, coalesce(Cmtd_Hrs, "0") Hours_Work
from
(
select distinct(d_name) Shorts_Makers
from dressmaker d, construction c, order_line ol, garment g
where d_no=maker
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and style_no=ol_style and description='Shorts'
order by ol.order_ref
) Novo
left join
(
select d_name DM, round(sum(labour_cost/4.5),2) Cmtd_Hrs
from dressmaker d, construction c, order_line ol, garment g
where style_no=ol_style
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and d_no=maker
and finish_date is NULL
group by d_name
) Novo2
on Novo.Shorts_Makers=Novo2.DM
order by Cmtd_Hrs Desc

-- Result:
Shorts_Makers	Hours_Work
Miss Stitch	15.78
Mr Seam	10.67
Miss Pins	8.89
Mr Needles	0

-- 4."Big spender of the year" is the customer who spends the most on high value items. 
Identify the "Big spender of the year 2002" if the "high value" threshold is set at £30. Also who would it be if the threshold was £20 or £50?

-- fraction of overall spending of each customer on high-value items threshold of 30 will differ from 20 or 50.

-- query result 1: will be to find the overall spending by each customer.

select c_name, round(sum(labour_cost+quantity*cost),2) Tot_Spend
from jmcust c, dress_order d, order_line o, quantities q, garment g, material m
where c_no=cust_no
and order_no=order_ref
and (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
group by c_name

-- Result:
c_name	Tot_Spend
Dr Green	61.35
Mr Brass	230.49
Mrs Peacock	85.9
Ms Black	56.95
Ms Brown	97.98
Ms Gray	128.9
Ms Muir	9.5
Ms White	208.25

-- query result 2: find high-value items = style_no + size_q + material_no combo

select c_name, style_no, size_q, material_no, round(sum(labour_cost+quantity*cost),2) Tot_Spend,
(case
when (round(sum(labour_cost+quantity*cost),2))>=30 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_30_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=20 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_20_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=50 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_50_Flag
from jmcust c, dress_order d, order_line o, quantities q, garment g, material m
where c_no=cust_no
and order_no=order_ref
and (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
group by style_no, size_q, material_no
order by c_name, style_no, size_q, material_no

-- Result:
c_name	H30	H20	H50	Tot_Spend
Mr Brass	148.2	198.54	72	230.49
Ms White	173.55	173.55	63	208.25
Ms Brown	52	74.65	52	97.97
Mrs Peacock	85.9	85.9	0	85.9
Ms Gray	32.85	114.35	0	128.9
Ms Black	0	29.6	0	56.95
Dr Green	0	29.6	0	61.35
Ms Muir	0	0	0	9.5

-- query result 3: just need cosmetic alignment now to show the big spender for each threshold

select concat(c_name,": when high value threshold at £30") "Big_S_Y2002", concat("£", max(H30)) Spend
from
(
select c_name, sum(HV_30_Flag) H30, sum(HV_20_Flag) H20, sum(HV_50_Flag) H50, sum(Tot_Spend) Tot_Spend
from
(
select c_name, style_no, size_q, material_no, round(sum(labour_cost+quantity*cost),2) Tot_Spend,
(case
when (round(sum(labour_cost+quantity*cost),2))>=30 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_30_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=20 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_20_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=50 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_50_Flag
from jmcust c, dress_order d, order_line o, quantities q, garment g, material m
where c_no=cust_no
and order_no=order_ref
and (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
group by style_no, size_q, material_no
order by c_name, style_no, size_q, material_no
) Novo
group by c_name
order by H30 Desc
) Novo2

UNION

select concat(c_name,": when high value threshold at £20") "Big_S_Y2002", concat("£", max(H20)) Spend
from
(
select c_name, sum(HV_30_Flag) H30, sum(HV_20_Flag) H20, sum(HV_50_Flag) H50, sum(Tot_Spend) Tot_Spend
from
(
select c_name, style_no, size_q, material_no, round(sum(labour_cost+quantity*cost),2) Tot_Spend,
(case
when (round(sum(labour_cost+quantity*cost),2))>=30 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_30_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=20 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_20_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=50 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_50_Flag
from jmcust c, dress_order d, order_line o, quantities q, garment g, material m
where c_no=cust_no
and order_no=order_ref
and (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
group by style_no, size_q, material_no
order by c_name, style_no, size_q, material_no
) Novo
group by c_name
order by H20 Desc
) Novo2

UNION

select concat(c_name,": when high value threshold at £50") "Big_S_Y2002", concat("£", max(H50)) Spend
from
(
select c_name, sum(HV_30_Flag) H30, sum(HV_20_Flag) H20, sum(HV_50_Flag) H50, sum(Tot_Spend) Tot_Spend
from
(
select c_name, style_no, size_q, material_no, round(sum(labour_cost+quantity*cost),2) Tot_Spend,
(case
when (round(sum(labour_cost+quantity*cost),2))>=30 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_30_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=20 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_20_Flag,
(case
when (round(sum(labour_cost+quantity*cost),2))>=50 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) HV_50_Flag
from jmcust c, dress_order d, order_line o, quantities q, garment g, material m
where c_no=cust_no
and order_no=order_ref
and (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
group by style_no, size_q, material_no
order by c_name, style_no, size_q, material_no
) Novo
group by c_name
order by H50 Desc
) Novo2

-- Result:
Big_S_Y2002	Spend
Ms White: when high value threshold at £30	£173.55
Mr Brass: when high value threshold at £20	£198.54
Mr Brass: when high value threshold at £50	£72

-- 5.Who is the fastest at making trousers?

-- query 1: trouser makers

select distinct(d_name)
from dressmaker d, construction c, order_line ol, garment g
where d_no=maker
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and style_no=ol_style and description='Trousers'
order by ol.order_ref

-- Result:
d_name
Mrs Hem
Miss Pins
Mr Seam
Mr Needles
Miss Stitch

-- query 2: timestampdiff

select d_name, description, coalesce(timestampdiff(DAY, start_date, finish_date),"unfinished") Days
from dressmaker d, construction c, order_line ol, garment g
where d_no=maker
and (ol.order_ref=c.order_ref and ol.line_no=c.line_ref)
and style_no=ol_style and description='Trousers'
group by ol.order_ref, line_no
order by Days
Limit 1

-- Result:
d_name	description	Days
Mr Needles	Trousers	3

-- 6."Employee of the month" is the seamstress who completes the greatest value of clothes. Show the "employees of the month" for months in 2002.

select EOM "Emp of Mar'02", min(Mar_EOM) Value
from
(
select d_name EOM, round(sum(labour_cost+quantity*cost),2) Value_Gen,
(
case month(finish_date)
when 1 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Jan_EOM",
(
case month(finish_date)
when 2 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Feb_EOM",
(
case month(finish_date)
when 3 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Mar_EOM",
(
case month(finish_date)
when 4 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Apr_EOM"
from order_line o, quantities q, garment g, material m, construction c, dressmaker d, dress_order do
where (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
and (o.order_ref=c.order_ref and o.line_no=c.line_ref)
and d.d_no=c.maker
and do.order_no=o.order_ref
and completed='Y'
group by d_name
order by Mar_EOM
) N

-- Result:
Emp of Mar'02	Value
Mrs Hem	108.90

--  double checking this instead of order completed Y changing the approach to finish_date is not null 
because the order could not be completed due to part of order being with other seamstress

-- query attempt 2:

select EOM "Emp_March'02", concat("£",Mar_EOM) Greatest_Value
from
(
select d_name EOM, round(sum(labour_cost+quantity*cost),2) Value_Gen,
(
case month(finish_date)
when 1 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Jan_EOM",
(
case month(finish_date)
when 2 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Feb_EOM",
(
case month(finish_date)
when 3 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Mar_EOM",
(
case month(finish_date)
when 4 then round(sum(labour_cost+quantity*cost),2)
else ""
end
) "Apr_EOM"
from order_line o, quantities q, garment g, material m, construction c, dressmaker d, dress_order do
where (o.ol_size=q.size_q and o.ol_style=q.style_q)
and style_q=style_no
and ol_material=material_no
and (o.order_ref=c.order_ref and o.line_no=c.line_ref)
and d.d_no=c.maker
and do.order_no=o.order_ref
and finish_date is not NULL
group by d_name
order by Value_Gen Desc
) N
Limit 1

-- Result:
Emp_March'02	Greatest_Value
Mr Needles	£123.15
