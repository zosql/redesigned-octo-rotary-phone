-- Easy
-- 1.There are three issues that include the words "index" and "Oracle". Find the call_date for each of them

SELECT Date_format(call_date, '%Y-%m-%d %T') as call_date, call_ref FROM Issue
where Detail LIKE'%index%Oracle%' or Detail LIKE '%Oracle%index%'

-- Result:
+---------------------+----------+
| call_date           | call_ref |
+---------------------+----------+
| 2017-08-12 16:00:00 |     1308 |
| 2017-08-16 14:54:00 |     1697 |
| 2017-08-16 19:12:00 |     1731 |
+---------------------+----------+

-- 2.Samantha Hall made three calls on 2017-08-14. Show the date and time for each

select date_format(call_date, '%Y-%m-%d %T') as call_date, first_name, last_name
from Caller
join Issue on Caller.Caller_id=Issue.Caller_id
where call_date LIKE '2017-08-14%' and first_name='Samantha' and last_name='Hall'

-- Result:
+---------------------+------------+-----------+
| call_date           | first_name | last_name |
+---------------------+------------+-----------+
| 2017-08-14 10:10:00 | Samantha   | Hall      |
| 2017-08-14 10:49:00 | Samantha   | Hall      |
| 2017-08-14 18:18:00 | Samantha   | Hall      |
+---------------------+------------+-----------+

-- 3.There are 500 calls in the system (roughly). Write a query that shows the number that have each status.

-- Result:
+--------+--------+
| status | Volume |
+--------+--------+
| Closed |    486 |
| Open   |     10 |
+--------+--------+

Select Status, count(caller_id) As Volume from Issue
Group by status

-- 4.Calls are not normally assigned to a manager but it does happen. How many calls have been assigned to staff who are at Manager Level?

-- Result:
+------+
| mlcc |
+------+
|   51 |
+------+

select count(*) as mlcc 
from Issue
join Staff on Staff.Staff_code=Issue.assigned_to
join Level on Level.Level_code=Staff.Level_code
where Level.Level_code between 4 and 7 and Manager is not null

-- 5.Show the manager for each shift. Your output should include the shift date and type; also the first and last name of the manager.

-- Result:
+------------+------------+------------+-----------+
| Shift_date | Shift_type | first_name | last_name |
+------------+------------+------------+-----------+
| 2017-08-12 | Early      | Logan      | Butler    |
| 2017-08-12 | Late       | Ava        | Ellis     |
| 2017-08-13 | Early      | Ava        | Ellis     |
| 2017-08-13 | Late       | Ava        | Ellis     |
| 2017-08-14 | Early      | Logan      | Butler    |
| 2017-08-14 | Late       | Logan      | Butler    |
| 2017-08-15 | Early      | Logan      | Butler    |
| 2017-08-15 | Late       | Logan      | Butler    |
| 2017-08-16 | Early      | Logan      | Butler    |
| 2017-08-16 | Late       | Logan      | Butler    |
+------------+------------+------------+-----------+

Select Date_Format(Shift_date,'%Y-%m-%d') as Shift_date, Shift_type, First_name, Last_name from Shift
Join Staff on Staff.Staff_code=Shift.Manager
Order by Shift_date

-- Medium
-- 6.List the Company name and the number of calls for those companies with more than 18 calls.

-- Result:
+------------------+----+
| Company_name     | cc |
+------------------+----+
| Gimmick Inc.     | 22 |
| Hamming Services | 19 |
| High and Co.     | 20 |
+------------------+----+

select Company_name, count(call_ref) as cc
from Customer
join Caller on Customer.Company_ref=Caller.Company_ref
join Issue on Caller.Caller_id=Issue.caller_id
group by Company_name
Having count(call_ref)>18

-- 7.Find the callers who have never made a call. Show first name and last name

-- Result
+------------+-----------+
| first_name | last_name |
+------------+-----------+
| David      | Jackson   |
| Ethan      | Phillips  |
+------------+-----------+

-- 8.For each customer show: Company name, contact name, number of calls where the number of calls is fewer than 5

-- My Result:
Company_name	First_name	Last_Name	nc
Pitiable Shipping	Chloe	Walker	4
Rajab Group	Emily	Cooper	4
Somebody Logistics	Elizabeth	Baker	2

-- Default Result:
+--------------------+------------+-----------+----+
| Company_name       | first_name | last_name | nc |
+--------------------+------------+-----------+----+
| Pitiable Shipping  | Ethan      | McConnell |  4 |
| Rajab Group        | Emily      | Cooper    |  4 |
| Somebody Logistics | Ethan      | Phillips  |  2 |
+--------------------+------------+-----------+----+

-- Following query A shows result A: 
select Company_name, First_name, Last_Name, Issue.Call_Ref from Caller
left join Customer on Customer.Company_ref=Caller.Company_ref
left join Issue on Caller.Caller_id=Issue.caller_id
where Company_name LIKE "Piti%" or Company_name LIKE "Some%" or Company_name LIKE "Rajab%"
Order by Customer.Company_Ref

-- Result A:
Company_name	First_name	Last_Name	Call_Ref
Somebody Logistics	Elizabeth	Baker	1469
Somebody Logistics	Elizabeth	Baker	1611
Somebody Logistics	Ethan	Phillips	
Pitiable Shipping	Chloe	Walker	1256
Pitiable Shipping	Chloe	Walker	1392
Pitiable Shipping	Ethan	McConnell	1262
Pitiable Shipping	Ethan	McConnell	1398
Rajab Group	Emily	Cooper	1240
Rajab Group	Emily	Cooper	1539
Rajab Group	Christopher	Edwards	1470
Rajab Group	Christopher	Edwards	1612

-- It shows that pitiable shipping has 4 tickets and Chloe Walker also has raised 2/4 tickets
-- Rajab Group also has 4 tickets and Christopher also raised 2/4 tickets besides Emily
-- Somebody logistics has 2 tickets and both raised by Elizabeth Baker
-- This means that the result shown by SQLZoo to be correct is not true.

-- Query B shows the closest possible result to the one required
select Company_name,first_name, last_name, count(Call_ref) nc from Caller
left join Customer on Customer.Company_ref=Caller.Company_ref
left join Issue on Caller.Caller_id=Issue.caller_id
Group by Company_name
order by Company_name Desc, NC

-- Result B:
Company_name	First_name	Last_Name	nc
Pitiable Shipping	Chloe	Walker	4
Rajab Group	Emily	Cooper	4
Somebody Logistics	Elizabeth	Baker	2

-- 9.For each shift show the number of staff assigned. Beware that some roles may be NULL and that the same person might have been assigned to multiple roles (The roles are 'Manager', 'Operator', 'Engineer1', 'Engineer2').

-- Result:
+------------+------------+----+
| Shift_date | Shift_type | cw |
+------------+------------+----+
| 2017-08-12 | Early      |  4 |
| 2017-08-12 | Late       |  4 |
| 2017-08-13 | Early      |  3 |
| 2017-08-13 | Late       |  2 |
| 2017-08-14 | Early      |  4 |
| 2017-08-14 | Late       |  4 |
| 2017-08-15 | Early      |  4 |
| 2017-08-15 | Late       |  4 |
| 2017-08-16 | Early      |  4 |
| 2017-08-16 | Late       |  4 |
+------------+------------+----+

-- Query A

select date_format(shift_date,'%Y-%m-%d') Shift_date, shift_type from Shift
order by shift_date, shift_type

-- Result A

Shift_date	shift_type
2017-08-12	Early
2017-08-12	Late
2017-08-13	Early
2017-08-13	Late
2017-08-14	Early
2017-08-14	Late
2017-08-15	Early
2017-08-15	Late
2017-08-16	Early
2017-08-16	Late

-- Since across columns counting unique values is tedious, a simple hack is to unionize and create a new table where all values appear in the same name column
-- then count the distinct values for each new table entry
-- this accounts for null entries if any and duplicates across columns

-- Query B

select date_format(shift_date,'%Y-%m-%d') as Shift_date, Shift_type, count(Distinct(role)) cw from
(
SELECT shift_date,shift_type,Manager AS role FROM Shift
Union
SELECT shift_date,shift_type,Operator AS role FROM Shift
Union
SELECT shift_date,shift_type,Engineer1 AS role FROM Shift
Union
SELECT shift_date,shift_type,Engineer2 AS role FROM Shift
) Novo
Group by shift_date, shift_type

-- 10.Caller 'Harry' claims that the operator who took his most recent call was abusive and insulting. Find out who took the call (full name) and when.

-- Result:
+------------+-----------+---------------------+
| first_name | last_name | call_date           |
+------------+-----------+---------------------+
| Emily      | Best      | 2017-08-16 10:25:00 |
+------------+-----------+---------------------+

-- Query:

Select First_name, last_name, call_date 
From
(select Staff.First_name, Staff.last_name, date_format(Issue.call_date,'%Y-%m-%d %T') as call_date, rank() over(order by Issue.call_date Desc) Rank 
from Staff
join Issue on Staff.staff_code=Issue.Taken_by
join Caller on Caller.caller_id=Issue.caller_id
where Caller.First_name='Harry') Ranked

where Rank=1

-- 11.Show the manager and number of calls received for each hour of the day on 2017-08-12

-- Result:
+---------+---------------+----+
| Manager | Hr            | cc |
+---------+---------------+----+
| LB1     | 2017-08-12 08 |  6 |
| LB1     | 2017-08-12 09 | 16 |
| LB1     | 2017-08-12 10 | 11 |
| LB1     | 2017-08-12 11 |  6 |
| LB1     | 2017-08-12 12 |  8 |
| LB1     | 2017-08-12 13 |  4 |
| AE1     | 2017-08-12 14 | 12 |
| AE1     | 2017-08-12 15 |  8 |
| AE1     | 2017-08-12 16 |  8 |
| AE1     | 2017-08-12 17 |  7 |
| AE1     | 2017-08-12 19 |  5 |
+---------+---------------+----+

-- Query A:

select manager,date_format(shift_date,'%Y-%m-%d'), start_time, end_time
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'

-- Result A:
manager	date_format(s..	start_time	end_time
LB1	2017-08-12	08:00	14:00
AE1	2017-08-12	14:00	20:00

-- Shows there were two managers on this date and 1 started at 8 am and worked till 2 pm
-- 2nd manager started at 2 pm and ended at 8 pm.

-- Query B:

Select Manager, concat(a," ",b) Hr
From
(
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%H') b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
Union
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%HH')+01 b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
Union
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%HH')+02 b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
Union
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%HH')+03 b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
Union
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%HH')+04 b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
Union
select manager,date_format(shift_date,'%Y-%m-%d') a, time_format(start_time,'%HH')+05 b
from Shift
Join Shift_type on Shift_type.Shift_type=Shift.Shift_type
where shift_date='2017-08-12'
) Novo
Order by Hr

-- Result B:
Manager	Hr
LB1	2017-08-12 08
LB1	2017-08-12 10
LB1	2017-08-12 11
LB1	2017-08-12 12
LB1	2017-08-12 13
AE1	2017-08-12 14
AE1	2017-08-12 15
AE1	2017-08-12 16
AE1	2017-08-12 17
AE1	2017-08-12 18
AE1	2017-08-12 19
LB1	2017-08-12 9

-- Shows that the 1st two columns can be cosmetically created 
-- However the inability to perfectly match the date and time column. ie 9 am to 09 am makes it difficult to merge it with the date-time-calls columns

-- Query C:

select date_format(call_date,'%Y-%m-%d %H') Hr, count(call_ref) cc from Issue
group by Hr
having Hr LIKE '2017-08-12 %'

-- Shows the need to now just add the manager's details column to finish the job

-- Query D: Final Answer

select  (case when call_date<'2017-08-12 14' then "LB1" else "AE1" end) Manager, date_format(call_date,'%Y-%m-%d %H') Hr, count(call_ref) cc
from Issue
group by Hr
having Hr LIKE '2017-08-12 %'

-- 12. 80/20 rule. It is said that 80% of the calls are generated by 20% of the callers. Is this true? What percentage of calls are generated by the most active 20% of callers.
-- Note - Andrew has not managed to do this in one query - but he believes it is possible.

-- Result:

+---------+
| t20pc   |
+---------+
| 32.2581 |
+---------+

-- select count(Call_ref) cc from Issue
-- 496 total calls generated

-- select Count(Distinct(caller_id)) from Issue
-- 146 distinct callers
-- top 20% would mean the top 29

select t20/496*100 t20pc
from
(
select sum(cc) t20 from
(
select caller_id, count(call_ref) cc, row_number() over (order by count(call_ref) Desc) Rank from Issue
group by caller_id
order by cc Desc
) Novo
where Rank<30
) Novo2

-- 13.Annoying customers. Customers who call in the last five minutes of a shift are annoying. Find the most active customer who has never been annoying.

-- Final Result:

+--------------+------+
| Company_name | abna |
+--------------+------+
| High and Co. |   20 |
+--------------+------+

-- Query A: Identifies the list of active customers

select company_name, count(call_ref) Z
from Customer
right join Caller on Customer.Company_ref=Caller.Company_ref
right join Issue on Issue.Caller_id=Caller.Caller_id
group by company_name
order by Z Desc

-- Result A:

company_name	Z
Gimmick Inc.	22
High and Co.	20
Hamming Services	19
Hydrophobic Inc.	18
Guttata Shipping	17
Lady Retail	16
Haunt Services	15
Immemorial Shipping	14
Medusa Shipping	14
Jesting and Co.	13
Logis Shipping	12
Diaphonic Shipping	12
Juan and Co.	12
Dasher Services	12
Fawe Group	11
Mock Group	11
Genus Ltd.	11
Whale Shipping	11
Snowless Traders	10
Parade and Co.	10
Miraculously Shipping	10
Desert Inc.	10
Snowless Logistics	10
Jesting Services	10
Nightshade Group	10
Crepusculous Inc.	9
Comfiture Traders	9
Oxbridge Shipping	9
Train Services	9
Bai Services	9
Askew Inc.	8
Packman Shipping	8
Take Group	8
Cell Group	7
Tetraneuris Shipping	7
Stoker Traders	7
Sprightlier Logistics	7
Cupulate Ltd.	7
Corncob Shipping	7
Askew Shipping	7
Affright Retail	6
Corps Ltd.	6
Pharyngeal Services	6
Sylvite Group	5
Variform Traders	5
Confusion Services	5
Shaped Logistics	5
Pitiable Shipping	4
Rajab Group	4
Somebody Logistics	2

-- Query B: Identifies the list of customers who have calls within the last 5 mins of shift end timings

select company_name, count(call_ref)
from Customer
right join Caller on Customer.Company_ref=Caller.Company_ref
right join Issue on Issue.Caller_id=Caller.Caller_id
WHERE(DATE_FORMAT(call_date, '%H') = 14 OR DATE_FORMAT(call_date, '%H') = 20)
AND DATE_FORMAT(call_date, '%i')>=55
group by company_name

-- Result B:
company_name	count(call_re..
Gimmick Inc.	1

-- Final Query C: Merge B into A as ANew where Not B with some modification to show only Rank 1

Select company_name, Z abna
from
(
select company_name, count(call_ref) Z, rank() over(order by count(call_ref) Desc) Rank
from Customer
right join Caller on Customer.Company_ref=Caller.Company_ref
right join Issue on Issue.Caller_id=Caller.Caller_id
where company_name NOT IN
(
select company_name
from Customer
right join Caller on Customer.Company_ref=Caller.Company_ref
right join Issue on Issue.Caller_id=Caller.Caller_id
WHERE(DATE_FORMAT(call_date, '%H') = 14 OR DATE_FORMAT(call_date, '%H') = 20)
AND DATE_FORMAT(call_date, '%i')>=55
group by company_name
)
group by company_name
order by Z Desc
) AnotB
where Rank = 1

-- 14.Maximal usage. If every caller registered with a customer makes at least one call in one day then that customer has "maximal usage" of the service. List the maximal customers for 2017-08-13.

-- Result:

+-------------------+--------------+--------------------+
| company_name      | caller_count | registered_callers |
+-------------------+--------------+--------------------+
| Askew Inc.        |            2 |                  2 |
| Bai Services      |            2 |                  2 |
| Dasher Services   |            3 |                  3 |
| High and Co.      |            5 |                  5 |
| Lady Retail       |            4 |                  4 |
| Packman Shipping  |            3 |                  3 |
| Pitiable Shipping |            2 |                  2 |
| Whale Shipping    |            2 |                  2 |
+-------------------+--------------+--------------------+

-- Query A: gives the ids that raised a ticket on the date mentioned

select Company_name, count(Distinct(Issue.caller_id)) caller_count
from Issue
join Caller on Issue.Caller_id=Caller.Caller_id
join Customer on Customer.Company_ref=Caller.Company_ref
WHERE DATE_FORMAT(call_date, '%Y-%m-%d') = '2017-08-13'
group by company_name

-- Query B: gives the distinct registered callers with each company

select Company_name, count(Distinct(Caller.caller_id)) registered_callers
from Caller 
join Customer on Customer.Company_ref=Caller.Company_ref
group by company_name

-- Final Query C: gives the desired result

select Novo.company_name, Novo.caller_count, Novo2.registered_callers
from
(
select Company_name, count(Distinct(Issue.caller_id)) caller_count
from Issue
join Caller on Issue.Caller_id=Caller.Caller_id
join Customer on Customer.Company_ref=Caller.Company_ref
WHERE DATE_FORMAT(call_date, '%Y-%m-%d') = '2017-08-13'
group by company_name
) Novo

Join
(
select Company_name, count(Distinct(Caller.caller_id)) registered_callers
from Caller 
join Customer on Customer.Company_ref=Caller.Company_ref
group by company_name
) Novo2

on Novo.company_name=Novo2.company_name
where caller_count=registered_callers
